# Banco de dados
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3307/proposal?createDatabaseIfNotExist=true&serverTimezone=UTC}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:root}
spring.datasource.initialization-mode=always

spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.javax.persistence.query.timeout = 50
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}


# actuator
management.endpoint.health.show-details=always

management.endpoint.health.statusProposta.order=fatal,down,out-of-service,unknown,up

management.endpoint.health.statusProposta.http-mapping.down=503
management.endpoint.health.statusProposta.http-mapping.fatal=503
management.endpoint.health.statusProposta.http-mapping.out-of-service=503

management.endpoints.web.exposure.include=health,metrics,prometheus
info.app.name=@project.name@
info.app.version=@project.version@

analise.host=${ANALISES_URL:http://localhost:9999/api/solicitacao}

cartao.host=${CARTOES_URL:http://localhost:8888}

atualizacao.scheduler = 10000